{"version":3,"sources":["data.js","service.js","Stats.js","App.js","registerServiceWorker.js","index.js"],"names":["players","8479339","name","8479344","8477493","8478427","8476882","8478420","8469638","8475798","8469459","8476469","8475287","8475820","8470047","8477476","8473463","8477953","8475222","8474627","8477499","8476874","8476902","8476440","8478906","8476447","8478541","8477945","8476336","8479290","8480164","8479511","8471469","8471695","8477293","8470140","8477424","8474550","8476914","8474667","8476444","8480009","8479404","8478915","8480829","8479976","8480035","8480036","8478449","8480965","8480005","8475156","8477996","8477357","8481572","8481554","GAME_STATUS_CODES","FINAL","playerIds","Object","keys","startDate","Date","setHours","setDate","getDate","cacheKey","getTime","addLeadingZero","value","fetchGames","date","getFullYear","getMonth","formatDate","fetch","then","response","status","Promise","reject","json","result","totalGames","games","dates","finished","unfinished","game","includes","statusCode","push","gamePk","length","resolve","error","addStar","score","playerId","starValue","hasOwnProperty","goals","assists","star","addShootoutGoal","shootOutGoals","fillScore","playersData","position","code","person","id","undefined","stats","goalieStats","saves","shots","skaterStats","playerScore","getCacheKey","unfinishedGames","getGameNightData","cacheKeyA","localStorage","getItem","data","JSON","parse","gamePks","cacheKEyB","processCount","replace","liveData","decisions","firstStar","secondStar","thirdStar","plays","scoringPlays","playId","play","allPlays","about","periodType","eventTypeId","filter","player","playerType","pop","boxscore","teams","away","home","parseFinns","sort","statsA","statsB","sortByPoints","setItem","stringify","getImageUrl","getPlayer","Stats","props","state","statsReady","this","setState","catch","message","className","map","points","title","key","href","target","src","alt","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5406c30a.chunk.js","sourcesContent":["export const players = {\n  8479339: {\n    name: 'Patrik Laine',\n  },\n  8479344: {\n    name: 'Jesse Puljuj√§rvi',\n  },\n  8477493: {\n    name: 'Aleksander Barkov',\n  },\n  8478427: {\n    name: 'Sebastian Aho',\n  },\n  8476882: {\n    name: 'Teuvo Ter√§v√§inen',\n  },\n  8478420: {\n    name: 'Mikko Rantanen',\n  },\n  8469638: {\n    name: 'Jussi Jokinen',\n  },\n  8475798: {\n    name: 'Mikael Granlund',\n  },\n  8469459: {\n    name: 'Mikko Koivu',\n  },\n  8476469: {\n    name: 'Joel Armia',\n  },\n  8475287: {\n    name: 'Erik Haula',\n  },\n  8475820: {\n    name: 'Joonas Donskoi',\n  },\n  8470047: {\n    name: 'Valtteri Filppula',\n  },\n  8477476: {\n    name: 'Artturi Lehkonen',\n  },\n  8473463: {\n    name: 'Leo Komarov',\n  },\n  8477953: {\n    name: 'Kasperi Kapanen',\n  },\n  8475222: {\n    name: 'Sami Vatanen',\n  },\n  8474627: {\n    name: 'Jori Lehter√§',\n  },\n  8477499: {\n    name: 'Rasmus Ristolainen',\n  },\n  8476874: {\n    name: 'Olli M√§√§tt√§',\n  },\n  8476902: {\n    name: 'Esa Lindell',\n  },\n  8476440: {\n    name: 'Markus Granlund',\n  },\n  8478906: {\n    name: 'Markus Nutivaara',\n  },\n  8476447: {\n    name: 'Miikka Salom√§ki',\n  },\n  8478541: {\n    name: 'Markus H√§nnik√§inen',\n  },\n  8477945: {\n    name: 'Julius Honka',\n  },\n  8476336: {\n    name: 'Iiro Pakarinen',\n  },\n  8479290: {\n    name: 'Kalle Kossila',\n  },\n  8480164: {\n    name: 'Henrik Haapala',\n  },\n  8479511: {\n    name: 'Janne kuokkanen',\n  },\n  // Goalies\n  8471469: {\n    name: 'Pekka Rinne',\n  },\n  8471695: {\n    name: 'Tuukka Rask',\n  },\n  8477293: {\n    name: 'Antti Raanta',\n  },\n  8470140: {\n    name: 'Kari Lehtonen',\n  },\n  8477424: {\n    name: 'Juuse Saros',\n  },\n  8474550: {\n    name: 'Antti Niemi',\n  },\n  8476914: {\n    name: 'Joonas Korpisalo',\n  },\n  8474667: {\n    name: 'Harri S√§teri',\n  },\n  8476444: {\n    name: 'Christopher Gibson',\n  },\n  8480009: {\n    name: 'Eeli Tolvanen',\n  },\n  8479404: {\n    name: 'Henrik Borgstr√∂m',\n  },\n  8478915: {\n    name: 'Sami Niku',\n  },\n  8480829: {\n    name: 'Jesperi Kotkaniemi',\n  },\n  8479976: {\n    name: 'Juuso v√§lim√§ki',\n  },\n  8480035: {\n    name: 'Henri Jokiharju',\n  },\n  8480036: {\n    name: 'Miro Heiskanen',\n  },\n  8478449: {\n    name: 'Roope Hintz',\n  },\n  8480965: {\n    name: 'Antti Suomela',\n  },\n  8480005: {\n    name: 'Kristian Vesalainen',\n  },\n  8475156: {\n    name: 'Mikko Koskinen',\n  },\n  8477996: {\n    name: 'Juho Lammikko',\n  },\n  8477357: {\n    name: 'Saku M√§enalanen',\n  },\n  8481572: {\n    name: 'Ville Heinola',\n  },\n  8481554: {\n    name: 'Kaapo Kakko',\n  },\n};\n\nexport const teams = {\n  1: 'New Jersey Devils',\n  2: 'New York Islanders',\n  3: 'New York Rangers',\n  4: 'Philadelphia Flyers',\n  5: 'Pittsburgh Penguins',\n  6: 'Boston Bruins',\n  7: 'Buffalo Sabres',\n  8: 'Montr√©al Canadiens',\n  9: 'Ottawa Senators',\n  10: 'Toronto Maple Leafs',\n  12: 'Carolina Hurricanes',\n  13: 'Florida Panthers',\n  14: 'Tampa Bay Lightning',\n  15: 'Washington Capitals',\n  16: 'Chicago Blackhawks',\n  17: 'Detroit Red Wings',\n  18: 'Nashville Predators',\n  19: 'St. Louis Blues',\n  20: 'Calgary Flames',\n  21: 'Colorado Avalanche',\n  22: 'Edmonton Oilers',\n  23: 'Vancouver Canucks',\n  24: 'Anaheim Ducks',\n  25: 'Dallas Stars',\n  26: 'Los Angeles Kings',\n  28: 'San Jose Sharks',\n  29: 'Columbus Blue Jackets',\n  30: 'Minnesota Wild',\n  52: 'Winnipeg Jets',\n  53: 'Arizona Coyotes',\n  54: 'Vegas Golden Knights'\n};\n\nexport const rosters = {\n  1: [8475222],\n  2: [8476444, 8470047, 8473463],\n  3: [8481554],\n  4: [8474627],\n  5: [8476874],\n  6: [8471695],\n  7: [8477499],\n  8: [8477476, 8474550, 8480829, 8476469],\n  10: [8477953],\n  12: [8478427, 8476882, 8479511, 8477357],\n  13: [8477493, 8474667, 8480164, 8479404, 8477996],\n  16: [8480035],\n  18: [8471469, 8477424, 8476447, 8480009],\n  20: [8479976],\n  21: [8478420],\n  22: [8479344, 8476336, 8475156],\n  23: [8476440, 8469638],\n  24: [8479290],\n  25: [8477945, 8476902, 8480036, 8478449],\n  28: [8475820, 8480965],\n  29: [8476914, 8478906, 8478541],\n  30: [8469459, 8475798],\n  52: [8479339, 8478915, 8480005, 8481572],\n  53: [8477293],\n  54: [8475287],\n};","import {players} from './data';\n\nconst SCHEDULE_URL = 'https://statsapi.web.nhl.com/api/v1/schedule?date=';\nconst GAME_FEED_URL = 'https://statsapi.web.nhl.com/api/v1/game/[GAME_PK]/feed/live';\nconst IMAGE_URL = 'https://nhl.bamcontent.com/images/headshots/current/60x60/[PLAYER_ID]@2x.jpg';\nconst YOU_TUBE_SEARCH_URL = 'https://www.youtube.com/results?search_query=[QUERY]';\nconst GAME_STATUS_CODES = {\n  FINAL: ['6', '7'],\n};\nconst ERROR_MESSAGE = 'Something went wrong.';\nconst CACHE_VERSION = 3;\n\nlet playerIds = Object.keys(players);\nlet startDate = (new Date());\nstartDate.setHours(0, 0, 0, 0);\nstartDate.setDate(startDate.getDate() - 1);\nlet cacheKey = 'stats' + startDate.getTime() + CACHE_VERSION;\n\n/**\n * @param value\n * @returns {string}\n */\nconst addLeadingZero = (value) => {\n  return value < 10 ? '0' + value : '' + value;\n};\n\nconst formatDate = (date) => {\n  return date.getFullYear()\n      + '-'\n      + addLeadingZero(date.getMonth() + 1)\n      + '-'\n      + addLeadingZero(date.getDate());\n};\n\nconst fetchGames = () => {\n  let date = formatDate(startDate);\n  // let date = 'bad-request';\n  // let date = '2018-06-06';\n  return fetch(SCHEDULE_URL + date)\n      .then(response => {\n        if (response.status !== 200) {\n          return Promise.reject();\n        }\n        return response.json();\n      })\n      .then(\n          (result) => {\n            if (result.totalGames === 0) {\n              return Promise.reject('No games today.');\n            }\n            let games = result.dates[0].games;\n            let finished = [];\n            let unfinished = [];\n            for (let game of games) {\n              if (GAME_STATUS_CODES.FINAL.includes(game.status.statusCode)) {\n                finished.push(game.gamePk);\n              } else {\n                unfinished.push(game.gamePk);\n              }\n            }\n            if (finished.length > 0) {\n              return Promise.resolve({finished, unfinished});\n            } else {\n              return Promise.reject('No finished games yet.');\n            }\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            return Promise.reject(ERROR_MESSAGE);\n          },\n      );\n};\n\nconst addStar = (score, playerId, starValue) => {\n  score[playerId] = {\n    ...(score.hasOwnProperty(playerId) ? score[playerId] : {\n      goals: 0,\n      assists: 0,\n    }),\n    star: starValue,\n  };\n\n  return score;\n};\n\nconst addShootoutGoal = (score, playerId) => {\n  score[playerId] = {\n    ...(score.hasOwnProperty(playerId) ? score[playerId] : {\n      goals: 0,\n      assists: 0,\n      shootOutGoals: 0,\n    })\n  };\n\n  score[playerId].shootOutGoals++;\n\n  return score;\n};\n\nconst fillScore = (score, playersData) => {\n  for (let playerId of Object.keys(playersData)) {\n    let players = playersData[playerId];\n    if (players.position.code === 'G'\n        && score.hasOwnProperty(players.person.id)\n        && score[players.person.id].star !== undefined) {\n      let {saves, shots} = players.stats.goalieStats;\n      if (saves && shots) {\n        score[players.person.id] = {\n          ...score[players.person.id], goals: 0, assists: 0, saves, shots,\n        };\n      }\n    } else if (['C', 'L', 'R', 'D'].includes(players.position.code)) {\n      let {goals, assists} = players.stats.skaterStats;\n      if (goals || assists) {\n        let playerScore = score.hasOwnProperty(players.person.id)\n            ? score[players.person.id]\n            : {};\n        score[players.person.id] = {\n          ...playerScore,\n          goals,\n          assists,\n        };\n      }\n    }\n  }\n\n  return score;\n};\n\nconst fetchScores = (gamePks) => {\n  // gamePks = [2017021182];\n  return new Promise((resolve, reject) => {\n    let processCount = 0;\n    let score = {};\n    for (let gamePk of gamePks) {\n      fetch(GAME_FEED_URL.replace(/\\[GAME_PK\\]/, gamePk))\n          .then(response => response.json())\n          .then(\n              // eslint-disable-next-line\n              (result) => {\n                processCount++;\n\n                let {firstStar, secondStar, thirdStar} = result.liveData.decisions;\n                // Stars aren't apparently always ready at status 7, so we must check them.\n                if (\n                  firstStar && secondStar && thirdStar\n                ) {\n                  score = addStar(score, firstStar.id, 1);\n                  score = addStar(score, secondStar.id, 2);\n                  score = addStar(score, thirdStar.id, 3);\n                }\n\n                let plays =  result.liveData.plays;\n                for (let playId of plays.scoringPlays) {\n                  let play = plays.allPlays[playId];\n                  if (play.about.periodType === 'SHOOTOUT' && play.result.eventTypeId === 'GOAL') {\n                    let playerId = play.players.filter(player => player.playerType === 'Scorer').pop().player.id;\n                    addShootoutGoal(score, playerId);\n                  }\n                }\n\n                let {away, home} = result.liveData.boxscore.teams;\n                score = fillScore(score, away.players);\n                score = fillScore(score, home.players);\n\n                if (processCount === gamePks.length) {\n                  resolve(score);\n                }\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              // eslint-disable-next-line\n              (error) => {\n                reject(ERROR_MESSAGE);\n              },\n          );\n    }\n  });\n};\n\nconst parseFinns = (score) => {\n  let stats = [];\n  for (let playerId of playerIds) {\n    if (score.hasOwnProperty(playerId)) {\n      stats.push({\n        ...score[playerId],\n        playerId: playerId,\n      });\n    }\n  }\n\n  return stats;\n};\n\nconst sortByPoints = (stats) => {\n  return stats.sort(\n      (statsA, statsB) => {\n        if (statsA.star || statsB.star) {\n          return (statsA.star ? statsA.star : 4) -\n              (statsB.star ? statsB.star : 4);\n        }\n        if (statsB.goals - statsA.goals !== 0) {\n          return statsB.goals - statsA.goals;\n        }\n        if (statsB.assists - statsA.assists !== 0) {\n          return statsB.assists - statsA.assists;\n        }\n        return 0;\n      },\n  );\n};\n\n/**\n * @param array unfinishedGames\n * @returns {string}\n */\nconst getCacheKey = (unfinishedGames) => {\n  return cacheKey + unfinishedGames.length;\n};\n\nexport const getGameNightData = () => {\n  let cacheKeyA = getCacheKey([]);\n  if (localStorage.getItem(cacheKeyA)) {\n    let data = JSON.parse(localStorage.getItem(cacheKeyA));\n    return Promise.resolve(data);\n  }\n\n  let unfinishedGames = [];\n  return fetchGames()\n      .then(games => {\n        unfinishedGames = games.unfinished;\n        let cacheKEyB = getCacheKey(unfinishedGames);\n        if (localStorage.getItem(cacheKEyB)) {\n        // if (false) {\n          let data = JSON.parse(localStorage.getItem(cacheKEyB));\n          return data;\n        } else {\n          return fetchScores(games.finished)\n              .then(score => parseFinns(score))\n              .then(stats => sortByPoints(stats))\n              .then(stats => {\n                localStorage.setItem(\n                    cacheKEyB,\n                    JSON.stringify({stats, unfinishedGames}),\n                );\n                return {stats, unfinishedGames};\n              });\n        }\n      });\n\n};\n\nexport const getImageUrl = (playerId) => {\n  return IMAGE_URL.replace(/\\[PLAYER_ID\\]/, playerId);\n};\n\nexport const getYouTubeSearchUrl = (name) => {\n  return YOU_TUBE_SEARCH_URL.replace(/\\[QUERY\\]/, name.replace(/\\s/, '+'));\n};\n\nexport const getPlayer = (playerId) => {\n  return players[playerId];\n};","import React, {Component} from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport {\n  getGameNightData,\n  getImageUrl,\n  getYouTubeSearchUrl,\n  getPlayer,\n} from './service';\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statsReady: false,\n      data: {\n        stats: [],\n        unfinishedGames: [],\n      },\n      // statsReady: true,\n      // stats: mockStats,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.data.stats.length === 0) {\n      getGameNightData()\n          .then(data => {\n            this.setState({\n              statsReady: true,\n              data: data,\n            });\n          })\n          .catch((message) => {\n            this.setState({\n              statsReady: true,\n              message: message,\n            });\n          });\n    }\n  }\n\n  render() {\n    let {statsReady, message} = this.state;\n    let {stats, unfinishedGames} = this.state.data;\n\n    if (statsReady) {\n      if (!message) {\n        return (\n            <div>\n              <div className=\"stats\">\n                {\n                  stats.map(\n                      ({playerId, goals = null, assists = null, shootOutGoals = null, saves = null, shots = null, star = null}) => {\n                        let points = '';\n                        if (goals || assists || shootOutGoals) {\n                          points = (\n                              <div\n                                  className={'card__points' + (shootOutGoals\n                                      ? ' card__points--has-shootout-goals'\n                                      : '')}\n                              >\n                                {goals + ' + ' + assists}\n                                {shootOutGoals &&\n                                <span\n                                    className=\"card__shoot-out-goals\"\n                                    title=\"Shootout goals\"\n                                >\n                                  &nbsp;\n                                  <span>(+{shootOutGoals})</span>\n                                </span>\n                                }\n                              </div>\n                          );\n                        } else if (saves && shots) {\n                          points = (\n                              <div className=\"card__points\">\n                                {saves + ' / ' + shots}\n                              </div>\n                          );\n                        }\n\n                        return (\n                            <div key={playerId} className=\"card-container\">\n                              <a\n                                  href={getYouTubeSearchUrl(\n                                      getPlayer(playerId).name)}\n                                  className=\"player-link\"\n                                  target=\"_blank\"\n                              >\n                                <div className=\"card\">\n                                  <div className=\"card__player\">\n                                    <img\n                                        src={getImageUrl(playerId)}\n                                        className=\"card__headshot\"\n                                        alt={getPlayer(playerId).name}\n                                        title={getPlayer(playerId).name}\n                                    />\n                                  </div>\n                                  {points}\n                                  {star &&\n                                  <i\n                                      className=\"fa fa-star card__star\"\n                                      title={star}\n                                  >\n                                  <span\n                                      className=\"card__star-value\">{star}</span>\n                                  </i>\n                                  }\n                                </div>\n                              </a>\n                            </div>\n                        );\n                      })\n                }\n              </div>\n              {unfinishedGames.length > 0 &&\n              <span>{unfinishedGames.length} games not finished yet.</span>\n              }\n            </div>\n\n        );\n      }\n      else {\n        return (\n            <span>{message}</span>\n        );\n      }\n\n    }\n    else {\n      return (\n          <span>Loading...</span>\n      );\n    }\n  }\n}\n\nexport default Stats;","import React, { Component } from 'react';\nimport './App.css';\nimport Stats from \"./Stats\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Stats/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}